Python

import requests
import json

def get_weather(api_key, city):
    """Retrieves and prints weather information for a given city."""

    base_url = "http://api.openweathermap.org/data/2.5/weather"
    params = {
        'q': city,
        'appid': api_key,
        'units': 'metric'  # Use Celsius
    }

    try:
        response = requests.get(base_url, params=params)
        response.raise_for_status()  # Raise HTTPError for bad responses (4xx or 5xx)
        weather_data = response.json()

        if weather_data['cod'] == 200:
            print(f"Weather in {weather_data['name']}, {weather_data['sys']['country']}:")
            print(f"  Description: {weather_data['weather'][0]['description']}")
            print(f"  Temperature: {weather_data['main']['temp']} °C")
            print(f"  Feels like: {weather_data['main']['feels_like']} °C")
            print(f"  Humidity: {weather_data['main']['humidity']}%")
            print(f"  Wind speed: {weather_data['wind']['speed']} m/s")
        else:
            print(f"Error: {weather_data['message']}")

    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
    except KeyError:
        print("Error: Invalid weather data received.")
    except json.JSONDecodeError:
        print("Error: Invalid JSON response.")

def main():
    """Main function to run the weather application."""
    try:
        api_key = input("Enter your OpenWeatherMap API key: ")
        city = input("Enter the city name: ")
        get_weather(api_key, city)

    except KeyboardInterrupt:
        print("\nProgram terminated by user.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")

if __name__ == "__main__":
    main()
